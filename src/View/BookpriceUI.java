/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Book;
import model.Bookprice;

/**
 *
 * @author Gihan
 */
public class BookpriceUI extends javax.swing.JPanel {
    Book book;
    Bookprice bookprice;
    
    int bookid;
    String booktitle;
    double soldprice;
    
    /**
     * Creates new form BookpriceUI
     */
    public BookpriceUI() {
        initComponents();
        
        book = new Book();
        loadTable(book.getBooksToTable2()); 
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblbooks = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bset = new javax.swing.JButton();
        lbooktitle = new javax.swing.JLabel();
        lbid = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lcurrprice = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tnewprice = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblprices = new javax.swing.JTable();
        lbid2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        tblbooks.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tblbooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Code", "Book Title", "Category", "Sold Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblbooks.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblbooks.setRowHeight(22);
        tblbooks.setSelectionBackground(new java.awt.Color(51, 51, 255));
        tblbooks.setSelectionForeground(new java.awt.Color(255, 255, 204));
        tblbooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblbooksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblbooks);
        tblbooks.getColumnModel().getColumn(0).setMinWidth(50);
        tblbooks.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblbooks.getColumnModel().getColumn(0).setMaxWidth(50);
        tblbooks.getColumnModel().getColumn(1).setMinWidth(50);
        tblbooks.getColumnModel().getColumn(1).setPreferredWidth(50);
        tblbooks.getColumnModel().getColumn(1).setMaxWidth(50);
        tblbooks.getColumnModel().getColumn(3).setMinWidth(100);
        tblbooks.getColumnModel().getColumn(3).setPreferredWidth(100);
        tblbooks.getColumnModel().getColumn(3).setMaxWidth(100);
        tblbooks.getColumnModel().getColumn(4).setMinWidth(100);
        tblbooks.getColumnModel().getColumn(4).setPreferredWidth(100);
        tblbooks.getColumnModel().getColumn(4).setMaxWidth(100);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Book Title:");

        bset.setText("Set as Current Price");
        bset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsetActionPerformed(evt);
            }
        });

        lbooktitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbooktitle.setForeground(new java.awt.Color(51, 102, 255));
        lbooktitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbooktitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbid.setForeground(new java.awt.Color(51, 102, 255));
        lbid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbid.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Current Price:");

        lcurrprice.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lcurrprice.setForeground(new java.awt.Color(153, 0, 0));
        lcurrprice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lcurrprice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("New Price:");

        tnewprice.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tnewprice.setForeground(new java.awt.Color(255, 51, 51));
        tnewprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tnewpriceKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lcurrprice, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tnewprice, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(28, 28, 28)
                        .addComponent(lbooktitle, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbid, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbooktitle, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbid, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lcurrprice, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(tnewprice, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bset, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Price History for Book ID:");

        tblprices.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tblprices.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "B.ID", "Sold Price", "From", "To", "Isactive"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblprices.setRowHeight(22);
        jScrollPane2.setViewportView(tblprices);
        tblprices.getColumnModel().getColumn(0).setMinWidth(50);
        tblprices.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblprices.getColumnModel().getColumn(0).setMaxWidth(50);
        tblprices.getColumnModel().getColumn(1).setMinWidth(80);
        tblprices.getColumnModel().getColumn(1).setPreferredWidth(80);
        tblprices.getColumnModel().getColumn(1).setMaxWidth(80);
        tblprices.getColumnModel().getColumn(4).setMinWidth(60);
        tblprices.getColumnModel().getColumn(4).setPreferredWidth(60);
        tblprices.getColumnModel().getColumn(4).setMaxWidth(60);

        lbid2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbid2.setForeground(new java.awt.Color(51, 102, 255));
        lbid2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbid2.setText("000");
        lbid2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbid2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbid2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bsetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsetActionPerformed
        if(tblbooks.getSelectedRow() != -1){
            if(!tnewprice.getText().trim().equals("")){
                bookprice = new Bookprice();
                bookprice.setBookid(bookid); 
                bookprice.setSoldprice(Double.parseDouble(tnewprice.getText()));  
                bookprice.setFromdate(getToday()); 
                bookprice.setTodate("2222-02-22");
                    if(JOptionPane.showConfirmDialog(null, "Sure to Update Price?", "Question", 0) == 0){
                        if(bookprice.updateBookPrice()){
                            JOptionPane.showMessageDialog(null, "Done! Price Updated Successfully!", "Done!", 1);
                            loadTable(book.getBooksToTable2());
                            loadTable2(bookprice.getBookPriceDetails(bookid));
                            tnewprice.setText(""); 
                        }else{
                            JOptionPane.showMessageDialog(null, "Error! While Updating Book Price!", "Warning!", 2);
                        }
                    }
            }else{
                JOptionPane.showMessageDialog(null, "Type the New Price of Book!", "Warning!", 2);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Select the Book from Table!", "Warning!", 2);
        }
        
        
        
        
        
    }//GEN-LAST:event_bsetActionPerformed

    private void tblbooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblbooksMouseClicked
        bookid = Integer.parseInt(tblbooks.getValueAt(tblbooks.getSelectedRow(), 0).toString()); 
        booktitle = tblbooks.getValueAt(tblbooks.getSelectedRow(), 2).toString();
        soldprice = Double.parseDouble(tblbooks.getValueAt(tblbooks.getSelectedRow(), 4).toString());
        lbooktitle.setText(booktitle); 
        lbid.setText(""+bookid);
        lcurrprice.setText(""+soldprice);
        
        bookprice = new Bookprice();
        loadTable2(bookprice.getBookPriceDetails(bookid)); 
        
    }//GEN-LAST:event_tblbooksMouseClicked

    private void tnewpriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tnewpriceKeyReleased
        if(!tnewprice.getText().isEmpty()){
            for(int x=0; x < tnewprice.getText().length(); x++){
                char c = tnewprice.getText().charAt(x);
                    if(!Character.isDigit(c)){
                        String text = tnewprice.getText().substring(0, x);
                        tnewprice.setText(null);
                        tnewprice.setText(text);
                        tnewprice.setText(""); 
                    }
            }
        }else{
            tnewprice.setText(""); 
        }
        
        
        
    }//GEN-LAST:event_tnewpriceKeyReleased
    
    void loadTable(ResultSet rs){
        clearTable();
        DefaultTableModel dt = (DefaultTableModel) tblbooks.getModel();
        
        try {
            while(rs.next()){
                Vector vec = new Vector();
                vec.add(rs.getInt("bookid"));
                vec.add(rs.getString("code"));
                vec.add(rs.getString("title"));
                vec.add(rs.getString("type"));
                vec.add(rs.getDouble("soldprice"));
                dt.addRow(vec); 
            }
            
        } catch (SQLException ex) {
            System.out.println("Error from table interface: " + ex);;
        }
        
    }
    
    void clearTable(){
        DefaultTableModel dt = (DefaultTableModel) tblbooks.getModel();
        int rows = tblbooks.getRowCount();
            for(int x=0; x < rows; x++){
                dt.removeRow(0); 
            }
        
    }
    
    void loadTable2(ResultSet rs){
        clearTable2();
        DefaultTableModel dt = (DefaultTableModel) tblprices.getModel();
        
        try {
            while(rs.next()){
                Vector vec = new Vector();
                vec.add(rs.getInt("bookbookid"));
                vec.add(rs.getDouble("soldprice"));
                vec.add(rs.getString("datefrom"));
                vec.add(rs.getString("dateto"));
                vec.add(rs.getInt("isactive"));
                dt.addRow(vec); 
            }
            
        } catch (SQLException ex) {
            System.out.println("Error from table interface: " + ex);;
        }
        
    }
    
    void clearTable2(){
        DefaultTableModel dt = (DefaultTableModel) tblprices.getModel();
        int rows = tblprices.getRowCount();
            for(int x=0; x < rows; x++){
                dt.removeRow(0); 
            }
        
    }
    
    String getToday(){
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String today = df.format(cal.getTime());
        
        return today;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbid;
    private javax.swing.JLabel lbid2;
    private javax.swing.JLabel lbooktitle;
    private javax.swing.JLabel lcurrprice;
    private javax.swing.JTable tblbooks;
    private javax.swing.JTable tblprices;
    private javax.swing.JTextField tnewprice;
    // End of variables declaration//GEN-END:variables
}
